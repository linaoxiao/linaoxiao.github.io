<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>欢迎来到林同学的碎碎念</title>
    <url>/2022/06/28/index/</url>
    <content><![CDATA[<center>来了别忘了给个打赏哦~</center>]]></content>
      <tags>
        <tag>personnel</tag>
      </tags>
  </entry>
  <entry>
    <title>性能测试注意事项</title>
    <url>/2022/06/28/daily_test/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不对啦！" data-whm="不对不对！">
  <script id="hbeData" type="hbeData" data-hmacdigest="a60c0b2aa5368e568d0a0cbb2eadd981e241a7ff65696c9b957ebebd263c34d1"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">暗号对了才可以看哦~</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
      <tags>
        <tag>work_srt</tag>
      </tags>
  </entry>
  <entry>
    <title>fio</title>
    <url>/2022/06/28/fio/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装相关软件包 ：sudo apt-get install libaio1 libaio-dev</span><br><span class="line">2、解压 fio工具包：</span><br><span class="line"># tar -xzvf fio-3.20.tar.gz</span><br><span class="line">3、进入fio解压后目录进行编译：</span><br><span class="line"># cd fio-3.20</span><br><span class="line"># sudo ./configure</span><br><span class="line"># sudo make &amp;&amp; make install</span><br><span class="line">4、执行以下命令，清除缓存后执行测试：</span><br><span class="line"># sudo su</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">#fio -filename=/fio_test -ioengine=libaio -bs=4K -direct=1 -size=1024M -iodepth 32 -thread -rw=write -runtime=600 -numjobs=$CPUN -group_reporting -name=**.result &gt;&gt; **.result -runtime=600</span><br><span class="line">// 将-bs参数设置为4K、128K、1M，将-rw设置为read、write、randread、randwrite，依次进行组合测试；</span><br><span class="line">// **.result为测试结果文件,自定义文件名即可。</span><br></pre></td></tr></table></figure>

<h3 id="Attention！"><a href="#Attention！" class="headerlink" title="Attention！"></a>Attention！</h3><h4 id="测试需使用稳定盘"><a href="#测试需使用稳定盘" class="headerlink" title="测试需使用稳定盘"></a>测试需使用稳定盘</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意下盘是否稳定，不稳定的盘测试出的结果无法做比较。</span><br><span class="line">可以使用dd命令对盘进行读写测试，然后用iostat查看数据是否</span><br><span class="line">稳定即可。</span><br><span class="line">例：使用dd命令对盘进行写测试</span><br><span class="line">dd if=/dev/zero of=/root/iot bs=1M count=20000 oflag=direct</span><br><span class="line">这里只写了20g，观察iostat -xmd 1 命令的wMB/s项的结果。</span><br><span class="line">如果都稳定的话，这个盘应该是稳定的</span><br></pre></td></tr></table></figure>

<h4 id="目前不是稳定盘的机器"><a href="#目前不是稳定盘的机器" class="headerlink" title="目前不是稳定盘的机器"></a>目前不是稳定盘的机器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">联想昭阳N4620Z、曙光W330-H35A1、浪潮英政CP300L</span><br></pre></td></tr></table></figure>

<h3 id="一些优化"><a href="#一些优化" class="headerlink" title="一些优化"></a>一些优化</h3><h4 id="修改预置条件"><a href="#修改预置条件" class="headerlink" title="修改预置条件"></a>修改预置条件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、准备fio-3.20测试工具包。</span><br><span class="line">2、二选一：将调度器bfq的空闲时间设为0，或者切换调度器为mq-deadline：</span><br><span class="line">（1）</span><br><span class="line"># echo bfq &gt; /sys/block/sda/queue/scheduler</span><br><span class="line"># echo 0 &gt; /sys/block/xxx/queue/iosched/slice_idle</span><br><span class="line">（2）</span><br><span class="line"># echo mq-deadline &gt; /sys/block/sda/queue/scheduler</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>glmark2</title>
    <url>/2022/06/28/glmark/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装glmark2包：# sudo apt-get install glmark2</span><br><span class="line">2、清除缓存：</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">3、执行测试： </span><br><span class="line"># glmark2 &gt; glmark2.txt</span><br></pre></td></tr></table></figure>

<h3 id="Attention！"><a href="#Attention！" class="headerlink" title="Attention！"></a>Attention！</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若机器架构为龙芯，运行时报段错误的话，尝试运行以下代码：</span><br><span class="line"># GALLIUM_DRIVER=softpipe glmark2</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若需在X环境下运行，则需要另外一台电脑远程输入：</span><br><span class="line">$ sudo systemctl stop lightdm</span><br><span class="line">$ sudo X</span><br><span class="line">$ export DISPLAY=:0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>glxgears</title>
    <url>/2022/06/28/glxgears/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、预置条件:	</span><br><span class="line">安装mesa-utils包：</span><br><span class="line"># sudo apt-get install mesa-utils</span><br><span class="line">2、清除缓存：</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">3、执行测试： </span><br><span class="line"># export vblank_mode=0 &amp;&amp; timeout 55 glxgears | tee -a glxgears.txt</span><br></pre></td></tr></table></figure>

<h3 id="一些优化"><a href="#一些优化" class="headerlink" title="一些优化"></a>一些优化</h3><h4 id="测试开始后，立马按“Ctrl-Alt-F4”打开一个终端，不要做任何其他操作"><a href="#测试开始后，立马按“Ctrl-Alt-F4”打开一个终端，不要做任何其他操作" class="headerlink" title="测试开始后，立马按“Ctrl+Alt+F4”打开一个终端，不要做任何其他操作"></a>测试开始后，立马按“Ctrl+Alt+F4”打开一个终端，不要做任何其他操作</h4>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/06/28/hello-world/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>iozone</title>
    <url>/2022/06/28/iozone/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">预置条件：系统的根分区空闲空间大于两倍内存；</span><br><span class="line">测试步骤：</span><br><span class="line">1、解压iozone工具包：</span><br><span class="line"># tar xvf iozone3_430.tar</span><br><span class="line">2、进入到解压目录编译工具：</span><br><span class="line"># cd iozone3_430/src/current</span><br><span class="line">arm架构执行： # make linux-arm</span><br><span class="line">x86架构执行： # make linux-AMD64</span><br><span class="line">龙芯架构执行： # make linux-ia64</span><br><span class="line">3、分别设置 iozone 块大小为内存的2倍、1倍、1/2倍大小，命令分别为:</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"># ./iozone -i 0 -i 1 -i 2 -f /iozonetest -r 16M -s 4G -Rb iozone_4G.xls</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"># ./iozone -i 0 -i 1 -i 2 -f /iozonetest -r 16M -s 8G</span><br><span class="line">-Rb iozone_8G.xls</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"># ./iozone -i 0 -i 1 -i 2 -f /iozonetest -r 16M -s 16G</span><br><span class="line">-Rb iozone_16G.xls</span><br><span class="line">// 命令中假设机器内存为 8G，测试时请根据实际情况修改-s 参数。</span><br></pre></td></tr></table></figure>

<h3 id="一些优化"><a href="#一些优化" class="headerlink" title="一些优化"></a>一些优化</h3><h4 id="vm-dirty-ratio"><a href="#vm-dirty-ratio" class="headerlink" title="vm.dirty_ratio"></a>vm.dirty_ratio</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vm.dirty_ratio用于调节脏数据刷新率，即脏数据达到百分之几的时候回写，即理论上调高此值，写性能提高</span><br></pre></td></tr></table></figure>

<h4 id="更改预置条件"><a href="#更改预置条件" class="headerlink" title="更改预置条件"></a>更改预置条件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、系统的根分区空闲空间大于两倍内存；</span><br><span class="line">2、准备iozone测试工具包；</span><br><span class="line">3、优化：</span><br><span class="line">（1）设置sys vm参数：</span><br><span class="line"># sudo su</span><br><span class="line"># sysctl -w vm.dirty_background_ratio=35</span><br><span class="line"># sysctl -w vm.dirty_ratio=80</span><br><span class="line"># sysctl -a |grep vm.d查看是否生效</span><br><span class="line">（2）修改预读；</span><br><span class="line"># echo 4096 &gt; /sys/block/sd**/queue/read_ahead_kb</span><br><span class="line">（3）修改bfq空闲</span><br><span class="line"># echo 0 &gt; /sys/block/sd**/queue/iosched/slice_idle</span><br></pre></td></tr></table></figure>

<h3 id="Attention！"><a href="#Attention！" class="headerlink" title="Attention！"></a>Attention！</h3><h4 id="测试需使用稳定盘"><a href="#测试需使用稳定盘" class="headerlink" title="测试需使用稳定盘"></a>测试需使用稳定盘</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意下盘是否稳定，不稳定的盘测试出的结果无法做比较。</span><br><span class="line">可以使用dd命令对盘进行读写测试，然后用iostat查看数据是否</span><br><span class="line">稳定即可。</span><br><span class="line">例：使用dd命令对盘进行写测试</span><br><span class="line">dd if=/dev/zero of=/root/iot bs=1M count=20000 oflag=direct</span><br><span class="line">这里只写了20g，观察iostat -xmd 1 命令的wMB/s项的结果。</span><br><span class="line">如果都稳定的话，这个盘应该是稳定的</span><br></pre></td></tr></table></figure>

<h4 id="如需设置sys-vm参数"><a href="#如需设置sys-vm参数" class="headerlink" title="如需设置sys vm参数"></a>如需设置sys vm参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改方法：</span><br><span class="line"># sysctl -w vm.dirty_background_ratio=35</span><br><span class="line"># sysctl -w vm.dirty_ratio=60</span><br><span class="line">修改好后可以在sysctl -a | grep vm.dirty 看下是否修改完成</span><br></pre></td></tr></table></figure>

<h4 id="修改预读"><a href="#修改预读" class="headerlink" title="修改预读"></a>修改预读</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo 4069 &gt; /sys/block/sd**/queue/read_ahead_kb </span><br><span class="line">sd** 换成要测的盘</span><br></pre></td></tr></table></figure>

<h4 id="修改bfq空闭"><a href="#修改bfq空闭" class="headerlink" title="修改bfq空闭"></a>修改bfq空闭</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo 0 &gt; /sys/block/sd**/queue/iosched/slice_idle</span><br><span class="line">sd** 换成要测的盘</span><br></pre></td></tr></table></figure>

<h4 id="一些报错"><a href="#一些报错" class="headerlink" title="一些报错"></a>一些报错</h4><h5 id="当前设备-x2F-目录下可用空间不足16，测试中止"><a href="#当前设备-x2F-目录下可用空间不足16，测试中止" class="headerlink" title="当前设备&#x2F;目录下可用空间不足16，测试中止"></a>当前设备&#x2F;目录下可用空间不足16，测试中止</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方法一：</span><br><span class="line">修改test_opt.h脚本：</span><br><span class="line">function iozone_opt() &#123;</span><br><span class="line">    IOZONE_VERSION=&quot;iozone3_430.tar&quot;</span><br><span class="line">    IOZONE_TESTPATH=&quot;/&quot;</span><br><span class="line">    IOZONE_TESTNUM=8</span><br><span class="line">    IOZONE_TEST_R=&quot;16M&quot;</span><br><span class="line">    IOZONE_TEST_S=&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line">更换至/data目录下</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>kdump</title>
    <url>/2022/06/28/kdump/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、环境搭建</span><br><span class="line">ubuntu/kylinos桌面版本系统：</span><br><span class="line">sudo apt install linux-crashdump</span><br><span class="line">（默认同时还会安装kdump-tools、kexec-tools、makedumpfile，注意安装过程会出现两个选择界面，都选择Y）</span><br><span class="line">sudo apt install crash</span><br><span class="line">2、检查/boot/grub/grub.cfg文件</span><br><span class="line">如果grub参数中没有crashkernel参数，则需要手动添加crashkernel=512M参数。</span><br><span class="line">3、kdump状态检查(检查kdump环境是否搭建完成)</span><br><span class="line">ubuntu/kylinos桌面版本系统： </span><br><span class="line">sudo kdump-config show 或 dmesg | grep crash</span><br><span class="line">如果出现not ready，则要根据具体显示信息分析查看原因。</span><br><span class="line">4、kdump验证测试</span><br><span class="line">然后测试验证kdump，通过sysrq触发内核panic：</span><br><span class="line"># echo 1 &gt; /proc/sys/kernel/sysrq</span><br><span class="line"># echo c &gt; /proc/sysrq-trigger</span><br><span class="line">等待1~2分钟机器自动重启后，在/var/crash目录下可以发现对应的dump文件</span><br><span class="line">通过ls -hf命令查看这两个文件大小，如果文件大小为0则说明有问题，需要接串口查看详细打印信息。</span><br></pre></td></tr></table></figure>

<h4 id="测试原理"><a href="#测试原理" class="headerlink" title="测试原理"></a>测试原理</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kdump（内存转储工具）是基于kexec（内核快速启动工具）的内核崩溃转储机制 在内核崩溃时收集内核崩溃前的内存的运行状态和数据以便分析崩溃原因，收集完成后让系统自动重启。 </span><br><span class="line">sysrq被称为”魔术组合键”， 是内建于Linux内核的调试工具。Sysrq实现的基本原理为：在键盘或串口驱动中(如果是/proc接口方式，则直接定义/proc的相关写入接口即可)，对按键进行判断过滤，然后根据不同的按键进行相应的中断处理。</span><br><span class="line"></span><br><span class="line">内核空间的系统调用kexec_load。负责在生产内核启动时将捕获内核加载到指定地址。</span><br><span class="line">用户空间的工具kexec-tools。将捕获内核的地址传递给生产内核，从而在系统崩溃的时候找到捕获内核的地址并运行。</span><br><span class="line"></span><br><span class="line">当系统崩溃时，kdump使用kexec启动到第二个内核。第二个内核通常叫做捕获内核，以很小内存启动以捕获转储镜像。第一个内核保留了内存的一部分给第二个内核启动使用。</span><br><span class="line">由于kdump利用kexec启动捕获内核，绕过了BIOS，所以第一个内核的内存得以保留。这是内存崩溃转储的本质。</span><br><span class="line"></span><br><span class="line">kdump功能主要分为3部分：</span><br><span class="line">1）kdump使能阶段：安装kdump，然后重启系统生效，系统会预留一段内存作为第二内核和日志存储用；kdump启动会使用kexec命令加载第二内核完毕，等待触发panic启动；</span><br><span class="line">2）系统panic，进入第二内核，内核将出错信息保存在/proc/vmcore提供给用户；</span><br><span class="line">3）日志转储完毕，重启系统，/var/crash分析日志；</span><br><span class="line"></span><br><span class="line"># echo 1 &gt; /proc/sys/kernel/sysrq //向sysrq文件中写入1是为了开启内核的SysRq功能，开启这个功能后，只要内核没有挂掉，它就会响应你要求的任何操作</span><br><span class="line"># echo c &gt; /proc/sysrq-trigger  //模拟输入c这个键触发SysRq功能。 c参数指故意让系统崩溃（Crashes the system without first unmounting file systems or syncing disks attached to the system）</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>内核测试</category>
      </categories>
  </entry>
  <entry>
    <title>lmbench</title>
    <url>/2022/06/28/lmbench/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、在终端中输入：</span><br><span class="line">$sudo su</span><br><span class="line"># tar xzvf tools/lmbench-3.0-a9-change.tar.gz -C /opt</span><br><span class="line"># cd /opt/lmbench-3.0-a9</span><br><span class="line">2、如果架构为X86跳过此步</span><br><span class="line"># sed -i &#x27;s/arm/aarch/&#x27; scripts/gnu-os</span><br><span class="line">3、拷贝config-run、lmbench.config.desktop配置文件至 scripts/，并将lmbench.config.desktop改名为lmbench.config，并赋执行权限；</span><br><span class="line">龙芯3a5000执行该步骤，其他架构跳过该步骤：将os拷贝至lmbench/scripts目录下。</span><br><span class="line">4、进行测试：</span><br><span class="line"># make results，选项除mail选NO外均选择默认</span><br><span class="line">5、导出测试结果：</span><br><span class="line"># cd ./results/***-linux-gnu/（***为架构名，根据实际情况进入目录）</span><br><span class="line"># sed -i &#x27;/\/dev\/tty: No such device or address/d&#x27; `ls ./`</span><br><span class="line"># sed -i &#x27;/\[net:/d&#x27; `ls ./`</span><br><span class="line"># sed -i &#x27;/\[if:/d&#x27; `ls ./`</span><br><span class="line"># sed -i &#x27;/\[mount:/d&#x27; `ls ./`</span><br><span class="line"># cd ../..</span><br><span class="line"># make see</span><br><span class="line">删除无用的信息，得到有用的结果文件summary.out</span><br></pre></td></tr></table></figure>

<h3 id="attention！"><a href="#attention！" class="headerlink" title="attention！"></a>attention！</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、测试的内存，默认2/3，超过16g的固定测的10g</span><br><span class="line">2、换核需要make clean一下</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若没有结果且为3a5000架构，看以下两条命令结果是否一致：</span><br><span class="line">$ arch</span><br><span class="line">$ uname -i</span><br><span class="line">然后修改脚本</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>optimize</title>
    <url>/2022/06/28/optimize/</url>
    <content><![CDATA[<h3 id="系统优化"><a href="#系统优化" class="headerlink" title="系统优化"></a>系统优化</h3><h4 id="关闭系统安全"><a href="#关闭系统安全" class="headerlink" title="关闭系统安全"></a>关闭系统安全</h4><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">以下两种方法均可：</span><br><span class="line">1、开机时在grub界面按“e”键进入编辑界面，将“security=enable”修改为“security=”，然后按“Ctrl+X”进入系统。该方法重启失效。</span><br><span class="line">2、修改/boot/下的grub.cfg文件（不同架构路径不同），修改文件中启动参数中“security=enable”修改为“security=”，保存后重启。该方法永久生效。</span><br><span class="line"></span><br><span class="line">设置完后使用:# getstatus确认是否设置成功，关闭成功会打印“KySec status: disabled”。</span><br></pre></td></tr></table></figure>

<h4 id="cpu频率固定为最高，并关闭动态调频"><a href="#cpu频率固定为最高，并关闭动态调频" class="headerlink" title="cpu频率固定为最高，并关闭动态调频"></a>cpu频率固定为最高，并关闭动态调频</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、# sudo cpufreq-set -g performance</span><br><span class="line">2、# sudo gsettings set org.ukui.power-manager power-policy-ac 0</span><br><span class="line">   # sudo gsettings set org.ukui.power-manager power-policy-battery 0</span><br><span class="line">3、# sudo echo performance &gt; /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</span><br><span class="line"></span><br><span class="line">设置完后使用：# cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor，查看是否均为“performance”。</span><br></pre></td></tr></table></figure>

<h4 id="内核启动参数修改"><a href="#内核启动参数修改" class="headerlink" title="内核启动参数修改"></a>内核启动参数修改</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">以下两种方法均可：</span><br><span class="line">1、开机时在grub界面按“e”键进入编辑界面，在“linux /vmlinuzxxx”行中添加“loglevel=0 cgroup_disable=memory audit=0 mitigations=off kpti=off ssbd=force-off security=none”，然后按“Ctrl+X”进入系统。改方法重启失效。</span><br><span class="line">2、修改/boot/下的grub.cfg文件（不同架构路径不同），在文件中启动参数行添加“loglevel=0 cgroup_disable=memory audit=0 mitigations=off kpti=off ssbd=force-off security=none”，保存后重启。该方法永久生效。</span><br><span class="line"></span><br><span class="line">设置完后进入系统使用# cat /proc/cmdline确认是否设置成功，成功时会打印信息中会包含“mitigations=off kpti=off ssbd=force-off”。</span><br></pre></td></tr></table></figure>

<h4 id="关闭组调度"><a href="#关闭组调度" class="headerlink" title="关闭组调度"></a>关闭组调度</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">以下三种方法均可：</span><br><span class="line">1、kernel.sched_autogroup_enabled = 0添加到/etc/sysctl.conf中，然后update-grub</span><br><span class="line">2、把“echo 0 &gt; /proc/sys/kernel/sched_autogroup_enabled”写到开机/etc/profile.d/下的脚本里</span><br><span class="line">3、执行echo 0 &gt; /proc/sys/kernel/sched_autogroup_enabled（该步骤每次开机都必须重复设置）</span><br><span class="line"></span><br><span class="line">设置完后cat /proc/sys/kernel/sched_autogroup_enabled查看是否为0。</span><br></pre></td></tr></table></figure>

<h4 id="关闭自启动应用"><a href="#关闭自启动应用" class="headerlink" title="关闭自启动应用"></a>关闭自启动应用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在开始菜单-设置-系统-开机启动中，关闭“天气”等其他自启动应用。</span><br></pre></td></tr></table></figure>

<h4 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">以下两种方法均可：</span><br><span class="line">1、（该方法每次重启后都必须重复操作）# systemctl stop syslog.socket</span><br><span class="line">   # systemctl stop auditd.service</span><br><span class="line">2、# systemctl disable auditd.service</span><br><span class="line"></span><br><span class="line">设置完后查看服务状态是否修改成功。</span><br></pre></td></tr></table></figure>

<h4 id="卸载不需要的应用"><a href="#卸载不需要的应用" class="headerlink" title="卸载不需要的应用"></a>卸载不需要的应用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、卸载软件商店：# sudo dpkg -P kylin-software-center</span><br><span class="line">2、卸载ukui-search：# sudo dpkg -P ukui-search</span><br><span class="line">3、卸载奇安信杀毒：# sudo dpkg -P qaxsafe</span><br><span class="line">4、卸载安卓兼容相关包：# sudo dpkg -P containerd</span><br><span class="line">5、卸载麒麟更新管理器：# sudo apt purge kylin-update-manager</span><br><span class="line">6、更新电源管理器ukui-power-manager 2.1.29-rc1</span><br></pre></td></tr></table></figure>

<h4 id="关闭不需要的进程"><a href="#关闭不需要的进程" class="headerlink" title="关闭不需要的进程"></a>关闭不需要的进程</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">测试前，用top命令是否有进程占用CPU，如果有，等CPU空闲或杀死/卸载相关应用进程，可能占用CPU的有麒麟打印（kylin-printer）。</span><br></pre></td></tr></table></figure>

<h4 id="升级应用层跑分补丁包"><a href="#升级应用层跑分补丁包" class="headerlink" title="升级应用层跑分补丁包"></a>升级应用层跑分补丁包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需额外申请。</span><br></pre></td></tr></table></figure>

<h4 id="升级跑分biv内核"><a href="#升级跑分biv内核" class="headerlink" title="升级跑分biv内核"></a>升级跑分biv内核</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需额外申请。</span><br></pre></td></tr></table></figure>

<h4 id="安装跑分版本系统"><a href="#安装跑分版本系统" class="headerlink" title="安装跑分版本系统"></a>安装跑分版本系统</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需额外申请。3A5000平台选择用XFS文件系统。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>speccpu</title>
    <url>/2022/06/28/speccpu/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 打开终端，安装依赖包：apt-get install gcc g++ gfortran</span><br><span class="line">2.解压缩speccpu2006测试工具包，并附执行权限</span><br><span class="line"># tar xvf speccpu2006-v1.0.1-newest.tar -C /home</span><br><span class="line"># chmod -R a+x /home/speccpu2006-v1.0.1</span><br><span class="line">3.修改./tools/src/make-3.80/glob/glob.c文件54行”==”为“&gt;=”   //make版本太高的话，不改可能会报错</span><br><span class="line">4.在./tools/src/buildtools文件312行上一行添加“export PERLFLAGS=&quot;-A libs=-lm -A libs=-ldl&quot;”  //防止编译perl测试程序时，连接数学库错误</span><br><span class="line">5.安装speccpu2006：</span><br><span class="line">arm和x86架构执行：</span><br><span class="line"># ./install.sh    //在弹出的提示信息中，选择yes回车</span><br><span class="line">mips架构执行：</span><br><span class="line"># mv ./tools/src/buildtools ./tools/src/buildtools.bak</span><br><span class="line"># mv ./tools/src/buildtools.mips.bak ./tools/src/buildtools</span><br><span class="line"># ./install.sh    //在弹出的提示信息中，选择yes回车</span><br><span class="line">3A5000架构执行：</span><br><span class="line"># cp -r loongarch64-linux /home/speccpu2006-v1.0.1/tools/bin</span><br><span class="line"># cp loongarch-fix.cfg /home/speccpu2006-v1.0.1/config</span><br><span class="line"># ./install.sh    //在弹出的提示信息中，选择yes回车</span><br><span class="line">加载环境变量：</span><br><span class="line">#. ./shrc</span><br><span class="line">6.检查SPEC CPU2006是否安装成功</span><br><span class="line"># runspec -V</span><br><span class="line">7.选择相应配置文件进行测试：</span><br><span class="line">arm平台：</span><br><span class="line"># runspec –c arm64.cfg -n 1 all</span><br><span class="line"># runspec –c arm64.cfg -r N -n 1 all    //N和CPU核数一致，根据机器的核数去指定多线程N值；-n 指定测试轮数;all代表浮点和整型参数都测试</span><br><span class="line">x86_64平台：</span><br><span class="line"># runspec –c x86.cfg -n 1 all</span><br><span class="line"># runspec –c x86.cfg -r N -n 1 all        </span><br><span class="line">mips平台：</span><br><span class="line"># runspec -c mips.cfg -n 1 all</span><br><span class="line"># runspec -c mips.cfg -r N -n 1 all</span><br><span class="line">3A5000平台：</span><br><span class="line"># runspec -c loongarch-fix.cfg -n 1 all</span><br><span class="line">#runspec -c loongarch-fix.cfg -r N -n 1 all</span><br></pre></td></tr></table></figure>

<h3 id="单跑某一项"><a href="#单跑某一项" class="headerlink" title="单跑某一项"></a>单跑某一项</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># runspec –c x86.cfg –iterations=1 –noreportable 435.gromacs</span><br></pre></td></tr></table></figure>

<h3 id="运行前需更改测试路径"><a href="#运行前需更改测试路径" class="headerlink" title="运行前需更改测试路径"></a>运行前需更改测试路径</h3><p><code>/home目录改为/data</code></p>
<h3 id="一些报错"><a href="#一些报错" class="headerlink" title="一些报错"></a>一些报错</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装报错：error running URI-1.35 test suite</span><br><span class="line">解决办法：将./tools/src/URI-1.35/t/heuristic.t的48、56行注释掉，使其跳过检查即可</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>稳定性测试注意事项</title>
    <url>/2022/06/28/stability_test/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不对啦！" data-whm="不对不对！">
  <script id="hbeData" type="hbeData" data-hmacdigest="2d1e55776c0bcfba71ed8f43b6315046870dcb88f499245f00039ae9cbd49f6b">e4983c46c33fe812766bcc317c679c6eb6c46d260c9e18aa1ccd93603cf74186be61a621b494c28fd3c142ed2cb36f6b5150a73f18543319cab7071e1f472ea6adfa83fe8bd5fdc04b74f2a0ba9c4fe98d8507f20e5900706837582e4d499e108ee329444997f419172be2df54c08f329138e719b310d551992a773c94d9abaa355d7ba59b83e4b6819ce7dbc6d681be9896c54017562c48bc68a80cc50580858f25fc961672a7b075e73ebc3a37acad2fb0147ac8180eb496f923bb6057dbe7bf251a2a2b6fee708c590e95846a33ca388efbca16747628b142452038279ab1190a4fc10be4309f1569238c64ea5987b014513f9f0ef548c03ecdcd181874f7449a90a0ba715cb57e74b58f17f48f5817187021fca9c130cf1d0dba83b1dbe1221dca02ef1f7c2b201b691934fc576c4413c8e2044defb94da9bfcf3ed15a518fd36d24b0bce99a63f65efab32ecb9211a34f33ea9032ee304a773c0d3f8cc7e051d750ea6958a4e50fa15a1b4d57cb7568efdeac14df03fcfbb88c1df4b191cadae021d06ec5a31c43b7e0f655eb08f5943c0fd2f52848780241f6b6d723760e9f97db51843b62a839365a4860ebbee80e325f8bafe07338e67c6cd4b9832bd2ca6b48bd55a549daab851c3b4185982a673f6d41ed7f4e2fefcc03471d3104fc1c1a6a9447d957958271ce5d4241432f80a69ee92fdffabe559a892732942192eeb3357606141f28982c22ab784ebc4bcd3fc018b2a8f91c94b15737c102481731fefcabea72eef34d068df30ab6c24552cd196015934dd74b2d2281a2f3b643b96a076f20afb0349a2872232c23345fa318fd26c4ca3ad6519f05cc9c22651f5d60fdc1fbac06f7027a2d49858244c1404cec62e69d2549b2c053352e5087d5068cd440e2f4a98c6604a132e2a22bbb615d6d735a2732b2977b118debac1787bc6abcece840b0704cc3b72a57becc6f172d0cb9fbad6a2ee9c6d6f166f2070f4e1659bb3a8d04aeb20a8418a23e8ab03725a7e9a5ca67a7759f1b74134441ab641ce674e22fd65cfac69668a5c26905082d9fd4216dd7a05969b9b3efe7c31483b1756683ac6b7e987f022e0960368405722ca6aa02556f809b9674968bc63d6c41afeb6e38f0a78d02be45ccfd81dd9222abc2f831a487c5ecafc2ac1c20b2ba1edb9b2b3ea3f4fbd86a0ac9df196740f85f9d260c889756de9f47cabaf2997b2cbec422c2f6c3de2ac551d2423b61dfba17ccc952062aba28d848a6006f3caeb974cf0faa9b1651fd9fda91b1f6e500575177e50d009eb22a98b5a18c85b05d2a777bf0890b65793356c7f5d8ee41303a9fa9712ad2da87f1eaf5ef65196c7c8fde2eee340be5ce33d6681a8d081578fa86ebd067b9386427a1b6f380669f33b00f52bf9228f1af076868c79d66cc1af37ff524385831b4a7179c73035e37de7669516fc7091e75bb9f52167b22d02a0478364857b74f3c37890c6d19cf63f4230a1d7be9772e0fb368b84005c2db5dcb077ae0bec49cbe51943498ea6f83ef6b4b52ee235e9aa678d6acaf0d5249b8271cc452d5093dcc234108e2738a0a2fb490270d647333571bd05ab409292e722e4d1e62e6d65fdbc95811aab1bbf75c4c5a414402afd31cec67dda0f959ab85fa1aadd82fd006b6637806cfab772c8625d656ebbb164d95aa2c5794746f9d9ef45ec6aeb7646ae113aca73b9361bfc071d640fd4980a6e9744e51e47125a4489008d028d1ce1dc372df7ada6b9ca02a9e585b60ec1abe52afe5988cca43208a28b890f45c8a030db7b26106fd76bd549664ace31c327a2a477620f1d28f43785cd81d18312c6be2c2b8ba998f981eac36dcd24e853ad367fca311db592b7f393a191e9c68a542c47e7cdbde441a4d2c80dac492e77513a17da6caa9c87daceb92ec5136923d84ef1681c60839291030e7778b92faae73b88121387d9d16953fb85994cedc08e0fe59a8b2c9c5dda781ed7c3dd231b6388e50d598d3bd6098bb478858753b6a572aa1ec3e7aa499f98cc4f9f319aba0e3ba92d615c2f42c6ef7ef048fa84a2afc8a31290245c41d47c5c305fbf3105ba9cf907cc0d14b1907126258a631ffeae10315577260e9abb1d932ca332419ff08ccb93fa757d5c62d950671ae0c1e7bdb814a733c7de35c5443c7a8705c682a7b77d1e6edb7c8e6a47f1881246a13666af88244366b4d3cbe564639c7c9667901c9228329ec483bde88462ecc3802505715498c452f09e4015e0b690402aa1ef9980e239d13772eec1b9184378103e72aad86a0466609ae0ba85ecf36a622654f9c334653bb0bd87db815e2c14335e0bc330cccfffdb78200c0f561b8aa912cd126af0404d81f7fa31c667e331fec75695637fe9ea4f54cd0b9008de3f55eb32b42cdc1620e5c7c4c7420fbea4625f7dda12d5de605c1997e10a91821619397055d74504424d6af5344b3b6e268cca44e7643c2fc8a576618d7521c6f4a2ea310c04bd28efaf15d8fb616ca63f46d457ae8525d9bbf3afc4ea1fbc81b6fba00e0ac435353719a1563b938934292928ca813b20f9feac4a624f6f7efb474613ac9382c96dc9e4b43a017c5b05930e4ce1d07c3b1ec5b84ac08dc1b50564d9e1a5152223ee37347f7fbae61b7780bfb769a4c126ccacb8f68c9b1e707e03450fca1048657e9e57529f4f6fced813181195e9b717f71d3a20c06efe7e2b3e915a2a676e19f0581eb305e507cf5b9c1a31f36262e80ad6d921023c76cd8c14c8acbc7b41fd8e48d566c77903ca1bfe86073f24284f793a5a3a8710abff6d2dc5235fb3281659ae8c160ecd24a4a74362b61d23031bfe7d149019e27a20afb69896e830c1ef220be94db086db3513058e101d1b8de25de3d7076cdcd89dfd27203d0154fb380d23c8f188769cafb8149bbbe227b6c3f0ad4a5c5ec2fd9f11a93ec79cbb48278dcf53a2ca1fbf260af84754d18b59ce4c554a72f3e6f0c54617a481cc09b7667d218e8fdc34b391b5f909e67bee3bfebe857899ca57d54cb86ed832b869cb35bbd0a55583d66d56fe1396c2fc4153b8c52fadb1f64cd2ce43a1a439028008f77131225363d212ab99e8b320721954f6f4f3bf49afaa780cddcd9709abbb4c184613dc2a87ed604b30d3edc459cc28c8968d54df3f269e6d495decaced2d6de56ff551ccb87f2418958ab1b3436fdf1b42ccac7010e75d4496a75fa2f180caf07140aafde80b851ce4a509d3e0d1e961545cedd59401acf6f9b750286f73b0679ff46024ac68dd68765266f522e3e34a85b4a5bf9746c21491febe55f1f52a5a8047f4ec480470f6bc60e6a1e1695cc958ac2c684f2c6a4863989f406659cdd1f98d64406ec4eedea7e3a5b1b9cf69c310565671cc92c07d2076959f09a01883cc2e71b0fc86d4848b05dd88200beeb3ec3789c283bbae5a8d6031a08d71fbec794fc68b253c7540285ac37b432d238336cb186289ecfdf7209b9984d4bac07fc91cd1988693e0a11dfe7f94594af98451fd443073dd21d7b679ac5c6cc9852ee5cb745c523e2a1a21032328207a2d624459f75f5d81902891e29e5354d81b9610037f6b59b9f74c65bb282556f04bf5b6ce5352960fb448e79d1a8f5c530deefca8eb0f497981d3ade34601901b6bb91c222ea33001c01d12f7db91cbdf9af114b3aef6b9d95dddaf32f27ab7b6896f3425ccec23593d468134cf39d7dc7837bf745ebc9ceec9636fe4657cb976d393381ec36600bc251c9be35bc8dd5e7c5120d152778a2bf6515ef19fe0858ab954b8c63681d3ab208ecec8d8c6c4862d7af12ffe7441d8e2352abf9dc151b2501eee5e4534223909a75d6c6a1f657ca5fdc600198e24bd4b6663edb9e86e5b4897925c4c9687cd10422c34a956c2399ed3da702ee4159f44d947cb9a8ee171205edeb3664ecb0cdb7588d1c91f41384149fa4e5b64b6606308bf0119e608f5221ef8a04aa3a454ebd0be2970062df96255991d25b00435e4bc28ece66ef5ddcb1002fed12c7dd67dcac927c45e65612e854ca860b418b0adff2d069adf0ca70ec8340fe9225d964fb30a7536f5e1a63b9749f0b1332836da5e99efa05d11c27640f642874ad86a301d6dab79e40e82768711054793b87f9432cea94de3b68bdfb81541098599e9cf4be497a6d537b79872c42fd18cf27dfd79bdc2a77b9997b899fa2c915da209752f19290a04e1757fbe0050fd288</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">暗号对了才可以看哦~</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>work</category>
        <category>稳定性测试</category>
      </categories>
      <tags>
        <tag>work_srt</tag>
      </tags>
  </entry>
  <entry>
    <title>stream</title>
    <url>/2022/06/28/stream/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、解压stream工具包：</span><br><span class="line"># tar xvf stream-5.9-1.tar.bz2</span><br><span class="line">2、进入到解压目录执行编译：</span><br><span class="line"># cd stream-5.9-1</span><br><span class="line"># make clean</span><br><span class="line"># make SET=TRUE N=80000000 NTIMES=100</span><br><span class="line">3、清除缓存：</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">4、测试单线程和多线程测试：</span><br><span class="line"># ./Run.sh -n 1 -n N</span><br><span class="line">// 若CPU核数为4，则N为4</span><br></pre></td></tr></table></figure>

<h4 id="开透明大页的影响"><a href="#开透明大页的影响" class="headerlink" title="开透明大页的影响"></a>开透明大页的影响</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改透明大页配置 TRANSPARENT_HUGEPAGE_ALWAYS=y，stream单项会有提升，但是stream满线会下降，只能二选一，只要不比UOS低就行。</span><br><span class="line">需要多次测试取区间作对比。</span><br></pre></td></tr></table></figure>

<h3 id="一些优化"><a href="#一些优化" class="headerlink" title="一些优化"></a>一些优化</h3><h4 id="用Os测Copy会比O3高，添加-ftree-vectorize会让O2单线Add和Triad分值提高"><a href="#用Os测Copy会比O3高，添加-ftree-vectorize会让O2单线Add和Triad分值提高" class="headerlink" title="用Os测Copy会比O3高，添加-ftree-vectorize会让O2单线Add和Triad分值提高"></a>用Os测Copy会比O3高，添加-ftree-vectorize会让O2单线Add和Triad分值提高</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、解压stream工具包：</span><br><span class="line"># tar xvf stream-5.9-1.tar.bz2</span><br><span class="line">2、进入到解压目录执行编译：</span><br><span class="line"># cd stream-5.9-1</span><br><span class="line"># make clean</span><br><span class="line"># make SET=TRUE N=80000000 NTIMES=100</span><br><span class="line">3、清除缓存：</span><br><span class="line"># sudo su </span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">4、测试单线程和多线程测试（假设机器为8核）：</span><br><span class="line"># export OMP_NUM_THREADS=8</span><br><span class="line"># export GOMP_CPU_AFFINITY=0-7</span><br><span class="line"># ./Run.sh -n 1 -n 8</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>unixbench</title>
    <url>/2022/06/28/unixbench/</url>
    <content><![CDATA[<h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><span id="more"></span>
<h4 id="base"><a href="#base" class="headerlink" title="base"></a>base</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、解压UnixBench工具包：</span><br><span class="line"># tar xvf unixbench5.1.3-new.tar</span><br><span class="line">2、进入Unixbench解压后的目录下，编译：</span><br><span class="line"># cd UnixBench</span><br><span class="line"># make clean &amp;&amp; make</span><br><span class="line">3、清除缓存：</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line">4、测试单线程和多线程性能，执行命令：</span><br><span class="line"># sudo ./Run -c 1 -c N </span><br><span class="line">其中N代表cpu核数</span><br></pre></td></tr></table></figure>

<h4 id="graphics"><a href="#graphics" class="headerlink" title="graphics"></a>graphics</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、解压unixbench测试包，并进入文件夹：</span><br><span class="line"># tar xvf unixbench5.1.3-new.tar</span><br><span class="line"># cd Unixbench</span><br><span class="line">2、修改Run脚本中第1218行，注释如下内容：</span><br><span class="line"># If it failed, bomb out.</span><br><span class="line">#       if (defined($res-&gt;&#123;&#x27;ERROR&#x27;&#125;)) &#123;</span><br><span class="line">#           my $name = $params-&gt;&#123;&#x27;logmsg&#x27;&#125;;</span><br><span class="line">#           abortRun(&quot;\&quot;$name\&quot;: &quot; . $res-&gt;&#123;&#x27;ERROR&#x27;&#125;);</span><br><span class="line">#       &#125;</span><br><span class="line">3、修改Makefile文件，打开第47行注释，修改为：</span><br><span class="line">GRAPHIC_TESTS = defined   //测试2D、3D才需要</span><br><span class="line">修改第50行为：</span><br><span class="line">GL_LIBS = -lGL -lXext -lX11 -lm   //需要系统提供x11perf命令gl_glibs库</span><br><span class="line">4、在解压后的目录中打开终端执行以下命令，编译、清除缓存然后执行测试：</span><br><span class="line"># make</span><br><span class="line"># export vblank_mode=0</span><br><span class="line"># sync</span><br><span class="line"># echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"># ./Run graphics</span><br></pre></td></tr></table></figure>

<h3 id="一些优化"><a href="#一些优化" class="headerlink" title="一些优化"></a>一些优化</h3><h4 id="挂载到内存"><a href="#挂载到内存" class="headerlink" title="挂载到内存"></a>挂载到内存</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压前执行：</span><br><span class="line"># sudo mkdir -p /home/Ub</span><br><span class="line"># sudo mount -t tmpfs -o size=4096M tmpfs /home/Ub</span><br><span class="line"></span><br><span class="line">较默认方法预计提升：单线10%左右，多线20%左右。</span><br></pre></td></tr></table></figure>

<h4 id="修改编译参数"><a href="#修改编译参数" class="headerlink" title="修改编译参数"></a>修改编译参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压后进入Unixbench目录：</span><br><span class="line">修改Makefile文件74行，将“OPTON = -O2 -fomit-frame-pointer -fforce-addr -ffast-math -Wall”改为“OPTON = -O3 -fomit-frame-pointer -fforce-addr -ffast-math -Wall -static -flto”</span><br><span class="line">然后编译</span><br><span class="line"></span><br><span class="line">较默认方法预计提升：单线15%~20%左右，多线15%~20%左右。</span><br></pre></td></tr></table></figure>

<h4 id="修改运行参数"><a href="#修改运行参数" class="headerlink" title="修改运行参数"></a>修改运行参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压后进入Unixbench目录：</span><br><span class="line">修改Run文件251行syscall项的option，将“&quot;options&quot; =&gt; &quot;10&quot;,”改为“&quot;options&quot; =&gt; &quot;10 getpid&quot;,”</span><br><span class="line">然后编译</span><br><span class="line"></span><br><span class="line">较默认方法预计提升：单线20%左右，多线20%左右。</span><br></pre></td></tr></table></figure>

<h4 id="安装优化包"><a href="#安装优化包" class="headerlink" title="安装优化包"></a>安装优化包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">安装优化包（需额外申请）：kylin-perf-utils_1.3.2-1-20_arm64/x86.deb</span><br><span class="line"></span><br><span class="line">较默认方法预计提升：单线40%左右，多线55%左右。</span><br></pre></td></tr></table></figure>

<h4 id="挂载到内存-amp-修改编译参数"><a href="#挂载到内存-amp-修改编译参数" class="headerlink" title="挂载到内存 &amp; 修改编译参数"></a>挂载到内存 &amp; 修改编译参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">较默认方法预计提升：单线25%~35%左右，多线35%~50%左右。</span><br></pre></td></tr></table></figure>

<h4 id="挂载到内存-amp-修改编译参数-amp-修改运行参数"><a href="#挂载到内存-amp-修改编译参数-amp-修改运行参数" class="headerlink" title="挂载到内存 &amp; 修改编译参数 &amp; 修改运行参数"></a>挂载到内存 &amp; 修改编译参数 &amp; 修改运行参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">较默认方法预计提升：单线55%左右，多线65%~80%左右。</span><br></pre></td></tr></table></figure>

<h4 id="挂载到内存-amp-修改编译参数-amp-修改运行参数-amp-优化包"><a href="#挂载到内存-amp-修改编译参数-amp-修改运行参数-amp-优化包" class="headerlink" title="挂载到内存 &amp; 修改编译参数 &amp; 修改运行参数 &amp; 优化包"></a>挂载到内存 &amp; 修改编译参数 &amp; 修改运行参数 &amp; 优化包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">较默认方法预计提升：单线115%左右，多线150%~180%左右。</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>work</category>
        <category>性能测试</category>
      </categories>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/2022/03/18/test-my-site/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
